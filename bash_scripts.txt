++++++++++++++++++++++++++++++
++      BASH СКРИПТЫ        ++
++                          ++
++++++++++++++++++++++++++++++

# Вывести максимально допустимое количество аргументов передаваемых в команде:
getconf ARG_MAX

# Получить абсолютное имя текущей оболочки:
echo $SHELL
# или:
echo $0

# Определить, работающий процесс текущей оболочки:
echo $$

# Посмотреть список оболочек, доступных в системе:
cat /etc/shells

# временно переключиться на другую оболочку:
<имя_оболочки>

# изменение командной оболочки на постоянной основе:
chsh -s <путь_новой_оболочки>

# изменить оболочку, используемую по умолчанию, для другого пользователя:
chsh -s <путь_новой_оболочки> <имя_пользователя>

Файл скрипта может иметь любое имя, расширение ".sh" нужно только для удобства пользователя.
# Что-бы запускать скрипт из оболочки, необходимо сделать файл скрипта исполняемым:
chmod +x <скрипт.sh>

# Запуск скрипта из оболочки:
./<скрипт.sh>

-----------------
ОБЩЕЕ СОДЕРЖИМОЕ:
-----------------

Первая строка всегда шибанг:
#!/bin/bash

Строка комментария начинается с #

кобанды считываются по строчно, либо разделяются знаком ";", например:
```
<команда> ; <команда> ; <команда>
<команда>
<команда>
<команда>
```

-----------
ПЕРЕМЕННЫЕ:
-----------

# Обьявить переменную
имя_переменной
 
# Вызвать переменную:
$имя_переменной
 
# Присвоить значение переменной:
имя_переменной=значение_переменной
имя_переменной=5
имя_переменной="текст"
имя_переменной=$((a+b))
имя_переменной=`команда`
имя_переменной=$(команда)

-------------------------
ВЫВОД СООБЩЕНИЙ НА ЭКРАН:
-------------------------

echo "текст"

# Если хотим указать в выводе на экран название переменной, а не ее значение"
echo "текст \$переменная"

# Перевод строки:
echo -e "текст\n"

-------------------------------------
УПРАВЛЯЮЩАЯ КОНСТРУКЦИЯ IF-THEN-ELSE:
-------------------------------------

Если условие - истина (возвращает 0) значит оно исполняется, иначе - нет.

```
if условие ; then
  действие
elif условие ; then
  действие
else
  действие
fi
```








